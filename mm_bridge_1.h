#ifndef _ALTERA_MM_BRIDGE_1_H_
#define _ALTERA_MM_BRIDGE_1_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'mm_bridge_1' and devices
 * connected to the following master:
 *   m0
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'adder_register_b', class 'pio64_out'
 * The macros are prefixed with 'ADDER_REGISTER_B_'.
 * The prefix is the slave descriptor.
 */
#define ADDER_REGISTER_B_COMPONENT_TYPE pio64_out
#define ADDER_REGISTER_B_COMPONENT_NAME adder_register_b
#define ADDER_REGISTER_B_BASE 0x0
#define ADDER_REGISTER_B_SPAN 8
#define ADDER_REGISTER_B_END 0x7

/*
 * Macros for device 'adder_register_a', class 'pio64_out'
 * The macros are prefixed with 'ADDER_REGISTER_A_'.
 * The prefix is the slave descriptor.
 */
#define ADDER_REGISTER_A_COMPONENT_TYPE pio64_out
#define ADDER_REGISTER_A_COMPONENT_NAME adder_register_a
#define ADDER_REGISTER_A_BASE 0x8
#define ADDER_REGISTER_A_SPAN 8
#define ADDER_REGISTER_A_END 0xf

/*
 * Macros for device 'adder_register_sum', class 'pio64_in'
 * The macros are prefixed with 'ADDER_REGISTER_SUM_'.
 * The prefix is the slave descriptor.
 */
#define ADDER_REGISTER_SUM_COMPONENT_TYPE pio64_in
#define ADDER_REGISTER_SUM_COMPONENT_NAME adder_register_sum
#define ADDER_REGISTER_SUM_BASE 0x10
#define ADDER_REGISTER_SUM_SPAN 8
#define ADDER_REGISTER_SUM_END 0x17

/*
 * Macros for device 'random', class 'altera_avalon_pio'
 * The macros are prefixed with 'RANDOM_'.
 * The prefix is the slave descriptor.
 */
#define RANDOM_COMPONENT_TYPE altera_avalon_pio
#define RANDOM_COMPONENT_NAME random
#define RANDOM_BASE 0x20
#define RANDOM_SPAN 16
#define RANDOM_END 0x2f
#define RANDOM_BIT_CLEARING_EDGE_REGISTER 0
#define RANDOM_BIT_MODIFYING_OUTPUT_REGISTER 0
#define RANDOM_CAPTURE 0
#define RANDOM_DATA_WIDTH 32
#define RANDOM_DO_TEST_BENCH_WIRING 0
#define RANDOM_DRIVEN_SIM_VALUE 0
#define RANDOM_EDGE_TYPE NONE
#define RANDOM_FREQ 50000000
#define RANDOM_HAS_IN 1
#define RANDOM_HAS_OUT 0
#define RANDOM_HAS_TRI 0
#define RANDOM_IRQ_TYPE LEVEL
#define RANDOM_RESET_VALUE 0

/*
 * Macros for device 'ctrl_register', class 'altera_avalon_pio'
 * The macros are prefixed with 'CTRL_REGISTER_'.
 * The prefix is the slave descriptor.
 */
#define CTRL_REGISTER_COMPONENT_TYPE altera_avalon_pio
#define CTRL_REGISTER_COMPONENT_NAME ctrl_register
#define CTRL_REGISTER_BASE 0x30
#define CTRL_REGISTER_SPAN 16
#define CTRL_REGISTER_END 0x3f
#define CTRL_REGISTER_BIT_CLEARING_EDGE_REGISTER 0
#define CTRL_REGISTER_BIT_MODIFYING_OUTPUT_REGISTER 0
#define CTRL_REGISTER_CAPTURE 0
#define CTRL_REGISTER_DATA_WIDTH 2
#define CTRL_REGISTER_DO_TEST_BENCH_WIRING 0
#define CTRL_REGISTER_DRIVEN_SIM_VALUE 0
#define CTRL_REGISTER_EDGE_TYPE NONE
#define CTRL_REGISTER_FREQ 50000000
#define CTRL_REGISTER_HAS_IN 0
#define CTRL_REGISTER_HAS_OUT 1
#define CTRL_REGISTER_HAS_TRI 0
#define CTRL_REGISTER_IRQ_TYPE NONE
#define CTRL_REGISTER_RESET_VALUE 0

/*
 * Macros for device 'uart_0', class 'altera_avalon_uart'
 * The macros are prefixed with 'UART_0_'.
 * The prefix is the slave descriptor.
 */
#define UART_0_COMPONENT_TYPE altera_avalon_uart
#define UART_0_COMPONENT_NAME uart_0
#define UART_0_BASE 0x40
#define UART_0_SPAN 32
#define UART_0_END 0x5f
#define UART_0_BAUD 115200
#define UART_0_DATA_BITS 8
#define UART_0_FIXED_BAUD 1
#define UART_0_FREQ 50000000
#define UART_0_PARITY 'N'
#define UART_0_SIM_CHAR_STREAM ""
#define UART_0_SIM_TRUE_BAUD 0
#define UART_0_STOP_BITS 1
#define UART_0_SYNC_REG_DEPTH 2
#define UART_0_USE_CTS_RTS 0
#define UART_0_USE_EOP_REGISTER 0


#endif /* _ALTERA_MM_BRIDGE_1_H_ */
